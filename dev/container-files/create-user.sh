#!/usr/bin/env bash
set -euo pipefail

##############################################################################
# 0. tiny helpers
##############################################################################
die() { echo >&2 "error: $*"; exit 1; }
need() { command -v "$1" >/dev/null || die "missing binary: $1"; }

##############################################################################
# 1. create the normal dev user  (original logic, trimmed a little)
##############################################################################
create_user() {
    local user=$1 uid=$2 gid=$3

    [[ -z $user || -z $uid || -z $gid ]] && die "Usage: $0 <user> <uid> <gid>"

    local myshell=/bin/fish

    echo "$user:x:$gid:"                     >> /etc/group
    echo "$user:x::"                         >> /etc/gshadow
    sed -i "s|^$user:.*|$user:x:$uid:$gid::/home/$user:$myshell|" /etc/passwd
    echo "$user:!x:::::::"                   >> /etc/shadow

    # skeleton HOME
    mkdir -p /home/$user
    chown -R $uid:$gid /home/$user
    chmod -R 755 /home/$user
    install -d -o "$uid" -g "$gid" -m 755  /home/$user

    #   XDG dirs **before** fish starts so it can write history, etc.
    install -d -o "$uid" -g "$gid" -m 700  \
        /home/$user/.config \
        /home/$user/.local/share \
        /home/$user/.cache \
        /home/$user/.ssh

    # bring over useful root files but NOT its fish config
    need rsync
    rsync -a --chown=$uid:$gid --exclude '.config/fish*' \
        /root/ /home/$user/ || true

    chmod 1777 /tmp                          # stickyâ€‘bit temp

    #  after the XDGâ€‘dir block, before the EOF heredoc
    install -Dm644 /etc/containerâ€‘skel/config.fish \
                   /home/$user/.config/fish/config.fish
    touch /home/$user/.config/fish/fish_variables
    chown  -R "$uid:$gid" /home/$user
}

##############################################################################
# 3. main
##############################################################################
(( EUID == 0 )) || die "please run as root"
[[ $# == 3 ]]   || die "Usage: \$0 <user> <uid> <gid>"

user=$1; uid=$2; gid=$3
create_user "$user" "$uid" "$gid"

cat <<BANNER
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 ðŸš€  Container ready!

 â€¢ User ............. $user  (uid=$uid / gid=$gid)
 â€¢ SSH host-keys .... will be generated by \`start-dropbear\`
 â€¢ SSH server ....... runs on 0.0.0.0:2222 (ðŸ”‘ keyâ€‘auth only)

 ðŸ‘‰  To connect from host (Zed, VSÂ Code Remoteâ€‘SSH, etc.):

 0. Start container with the correct args. For example:
 podman run --rm --name polar-dev \
    --user 0 --userns=keep-id -it -p 2222:2223 \
    -v .:/workspace:rw \
    polar-dev:latest \
    /create-user.sh "\$USER" "\$(id -u)" "\$(id -g)"

 1. Once per container â€” copy your public key into the current workspace folder (should be your volume mount directory):
        cp ~/.ssh/id_ed25519.pub <workspace_mount>/authorized_keys

     2. Then, inside the container as '$user':
        start-dropbear

     3. Finally, from the host:
        ssh -p 2222 $user@127.0.0.1

 ðŸ›   Notes:
     â€¢ Only key-auth is supported (no passwords)

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
BANNER

##############################################################################
# 4.  hand control to the user shell  (keep the OCI ENV that was set
#     by the image / containerâ€‘runtime, just add/override a few names)
##############################################################################

HOME=/home/$user \
  LOGNAME=$user \
  SHELL=/bin/fish \
  USER=$user \
  XDG_CACHE_HOME=/home/$user/.cache \
  XDG_CONFIG_HOME=/home/$user/.config \
  XDG_DATA_HOME=/home/$user/.local/share \
  chroot --userspec="$uid:$gid" / /bin/fish -l   # loginâ€‘shell so fish loads config
