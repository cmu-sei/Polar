# Polar (OSS)

# Copyright 2024 Carnegie Mellon University.

# NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING
# INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON
# UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS
# TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE
# OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE
# MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND
# WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.

# Licensed under a MIT-style license, please see license.txt or contact
# permission@sei.cmu.edu for full terms.

# [DISTRIBUTION STATEMENT A] This material has been approved for public release
# and unlimited distribution.  Please see Copyright notice for non-US
# Government use and distribution.

# This Software includes and/or makes use of Third-Party Software each subject
# to its own license.

# DM24-0470

services:
  neo4j:
    user: 7474:7474
    image: neo4j:5.10.0-community
    restart: unless-stopped
    ports:
      - '7474:7474'
      - '7687:7687'
    volumes:
      - neo4j-data:/data
      - ../../var/neo4j_volumes/data:/var/lib/neo4j/data
      - ../../var/neo4j_volumes/logs:/var/lib/neo4j/logs
      - ../../var/neo4j_volumes/conf:/var/lib/neo4j/conf
      - ../../var/neo4j_volumes/import:/var/lib/neo4j/import
      - ../../var/neo4j_volumes/plugins:/var/lib/neo4j/plugins

  rabbitmq:
    image: bitnami/rabbitmq:3.12
    hostname: rabbitmq
    restart: unless-stopped
    ports:
      - 5672:5672
      - 5671:5671
      - 15672:15672
    volumes:
      - ../../var/ssl/ca_certificate.pem:/tmp/ca_cert.pem:ro
      - ../../var/ssl/server_rabbitmq_key.pem:/tmp/server_key.pem:ro
      - ../../var/ssl/server_rabbitmq_certificate.pem:/tmp/server_cert.pem:ro
      - ./rabbitmq.conf:/bitnami/rabbitmq/conf/custom.conf:ro 
      - ./rabbitmq-docker-entrypoint/:/docker-entrypoint-initdb.d/:ro
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 1m

  # gitlab-consumer:
  #   image: gitlab_agent_consumer
  #   build:
  #     context: ../gitlab_agent
  #     additional_contexts:
  #       - polar=../polar
  #     target: gitlab_agent_consumer

  # gitlab-observer:
  #   image: gitlab_agent_observer
  #   build:
  #     context: ../gitlab_agent
  #     additional_contexts:
  #       - polar=../polar
  #     target: gitlab_agent_observer
  #   env_file:
  #     - example.env

volumes:
  neo4j-data:
