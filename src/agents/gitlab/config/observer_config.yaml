# Polar (OSS)

# Copyright 2024 Carnegie Mellon University.

# NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING
# INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON
# UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS
# TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE
# OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF THE
# MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND
# WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.

# Licensed under a MIT-style license, please see license.txt or contact
# permission@sei.cmu.edu for full terms.

# [DISTRIBUTION STATEMENT A] This material has been approved for public release
# and unlimited distribution.  Please see Copyright notice for non-US
# Government use and distribution.

# This Software includes and/or makes use of Third-Party Software each subject
# to its own license.

# DM24-0470

# Optional global configurations
# global_settings:                   

service:
  gitlab:
    graphql_endpoint: "https://gitlab.sandbox.labz.s-box.org/api/graphql"
    observers:
        # global observer settings. It may be deseriable to override these on a per-observer basis in the future.
        base_interval_secs: 300 # Amount of time observers will wait before "ticking" and querying the instance
        initial_backoff_secs: 60 # the amount of time the observer will wait the first time it needs to backoff + jitter 
        max_backoff_secs: 1800 # the max amount of time the observer will wait after backing off
    
    # TODO: enable toggling observers and adding parameters for their graphql queries.
    #   - resource: "users"              # The main resource to observe
    #     connected_resources:           # Resources linked to this resource
    #       - "groups"                   # Retrieve groups associated with users
    #     enabled: true                  # Whether this observer is active
    #     # Parameters taken by gitlab's users graphql API
    #     # REFERENCE: https://docs.gitlab.com/ee/api/graphql/reference/index.html#queryusers
    #     parameters:
    #         active: true 	# boolean Filter by active users. When true, returns active users. When false, returns non-active users.
    #         admins: true    # Boolean Return only admin users.
    #         groupId: null 	#  GroupID Return users member of a given group.
    #         humans: false   #  Boolean Filter by regular users. When true, returns only users that are not bot or internal users. When false, returns only users that are bot or internal users.
    #         ids: []         # [ID!] List of user Global IDs.
    #         usernames: []  	# [String!] List of usernames.
    #         # TODO: Enable?
    #         # search: 
    #   - resource: "projects"
    #     interval: 120
    #     connected_resources:
    #       - "users"                    # Retrieve users associated with projects
    #       - "runners"                  # Retrieve runners associated with projects
    #     enabled: true

    #   - resource: "runners"
    #     interval: 300                  # Fetch every 5 minutes
    #     connected_resources: []        # No connected resources for runners
    #     enabled: false                 # This observer is disabled
