apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "polar-gitlab-agent.fullname" . }}
  labels:
    {{- include "polar-gitlab-agent.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "polar-gitlab-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "polar-gitlab-agent.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: gitlab-observer
          image: "{{ .Values.observer.repository }}:{{ .Values.observer.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: TLS_CA_CERT
              value: "/etc/tls/ca_certificate.pem"
            - name: TLS_CLIENT_CERT
              value: "/etc/tls/client_polar_certificate.pem"
            - name: TLS_CLIENT_KEY
              value: "/etc/tls/client_polar_key.pem"
            - name:  BROKER_ADDR
              value: "cassini.polar.svc.cluster.local:8080"
            - name: GITLAB_ENDPOINT
              value: "https://gitlab.sandbox.labz.s-box.org/api/graphql"          
            - name: GITLAB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: gitlab-secret
                  key: token
          volumeMounts:
            - name: mtls-secrets
              mountPath: "/etc/tls"
              readOnly: true
        - name: gitlab-consumer
          image: "{{ .Values.consumer.repository }}:{{ .Values.consumer.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: TLS_CA_CERT
              value: "/etc/tls/ca_certificate.pem"
            - name: TLS_CLIENT_CERT
              value: "/etc/tls/client_polar_certificate.pem"
            - name: TLS_CLIENT_KEY
              value: "/etc/tls/client_polar_key.pem"
            - name:  BROKER_ADDR
              value: "cassini.polar.svc.cluster.local:8080"
            - name:  GRAPH_USER
              value: "neo4j"
            - name: GRAPH_DB
              value: neo4j
            - name: GRAPH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: neo4j-secret
                  key: password
                
          volumeMounts:
            - name: mtls-secrets
              mountPath: "/etc/tls"
              readOnly: true
      volumes:
        - name: mtls-secrets
          secret:
            secretName: client-mtls 

